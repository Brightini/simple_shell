#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include "main.h"
#include <sys/wait.h>

int main() {
	char **command;
	char *input, *ptr;
	pid_t child_pid;
	int stat_loc;
	size_t n = 20;

	while (1) {
		ptr = malloc(20 * sizeof(char));
		_getline(&ptr, &n, stdin);
		input = ptr;
		command = chstrtok(input);

		child_pid = fork();
		if (child_pid == 0) {
			/* Never returns if the call is successful */
			execvp(command[0], command);
			printf("This won't be printed if execvp is successul\n");
		} else {
			waitpid(child_pid, &stat_loc, WUNTRACED);
		}

		free(input);
		free(command);
	}

	return 0;
}
